#!/bin/sh
#
# init.d script for single or multiple unicorn installations. expects at least one .conf# file in /data/cs_app/current/config
#
# based on http://gist.github.com/308216 by http://github.com/mguterl
#
# /etc/init.d/unicorn start # starts all unicorns

set -e

export RAILS_ENV=production
export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin

UNICORN_USER=backbeat
ROOT_DIR=/var/groupon/backbeat
APP_ROOT=$ROOT_DIR/current
PIDFILE=$ROOT_DIR/shared/pids/unicorn.pid
OLD_PID="$PIDFILE.oldbin"
UNICORN_CONF=$APP_ROOT/config/unicorn.conf.rb
HOST=`hostname`
RACK_ENV=`ruby -e "puts(case \"$HOST\"; when /uat/, /fed2-tat.snc1/; 'uat'; when /staging/, /fed1-tat.snc1/; 'staging'; else; 'production'; end)"` 
UNICORN_EXEC="sudo -u $UNICORN_USER PATH=$PATH RUBYOPT=rubygems NEWRELIC_DISPATCHER=unicorn NEWRELIC_ENABLE=true RACK_ENV=$RACK_ENV bundle exec unicorn -c $UNICORN_CONF -D"

sig () {
 test -s "$PIDFILE" && kill -$1 `cat "$PIDFILE"`
}

oldsig () {
 test -s "$OLD_PID" && kill -$1 `cat "$OLD_PID"`
}

cmd () {
 case $1 in
   start)
     sig 0 && echo >&2 "already running" && exit 0
     echo "starting"
     cd $APP_ROOT
     $UNICORN_EXEC &
     ;;
   stop)
     sig QUIT && echo "stopping" && exit 0
     echo >&2 "not running"
     ;;
   force-stop)
     sig TERM && echo "forcing a stop" && exit 0
     echo >&2 "not running"
     ;;
   restart|reload)
     sig USR2 && exit 0
     echo >&2 "couldn't reload, running '$UNICORN_EXEC' instead"
     cd $APP_ROOT
     $UNICORN_EXEC &
     ;;
   rotate)
     sig USR1 && echo "rotating logs" && exit 0
     echo >&2 "not running"
     ;;
   upgrade)
     sig USR2 && echo upgraded && exit 0
     echo >&2 "couldn't upgrade, running '$UNICORN_EXEC' instead"
     cd $APP_ROOT
     $UNICORN_EXEC &
     ;;
   *)
     echo >&2 "usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"
     exit 1
     ;;
   esac
}

cmd $1
