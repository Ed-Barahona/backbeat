var search_data = {"index":{"searchIndex":["api","authenticate","camelcase","cameljsonformatter","health","log","workflow","color","colorize","delayed","backend","mongoid","job","groupon","financialengineering","capistrano","helper","mongo","object","tree","node","workflowserver","async","job","backbeatmongo","classmethods","client","config","delayedjoblogger","eventcomplete","eventnotfound","helper","hashkeytransformations","httperror","invaliddecisionselection","invalideventstatus","invalidparameters","logger","models","activity","branch","decision","event","flag","signal","subactivity","timer","user","watchdog","workflow","workflowcompleteflag","outputformatter","timeout","waitforsubactivity","_id()","activity_endpoint()","add()","add_decision()","app()","async_jobs()","blacklisted_fields()","blocking?()","blocking?()","blocking?()","call()","call()","call()","call()","call()","camelize_keys()","campfire_speak()","capture()","change_status()","change_status()","child_completed()","child_completed()","child_completed()","child_errored()","child_timeout()","cleanup()","colorize()","colorize()","commit_and_push()","commit_and_push_sox_artifact()","completed()","completed()","completed()","completed()","continue()","convert_object()","create_sox_artifact()","current_user()","deploy_already_tagged?()","depth()","depth()","destroy_jobs()","dismiss()","environment()","errored()","errored()","errored()","errored()","event()","event_type()","failure()","feed()","feed()","find_deploy_tags_from_today()","find_deployed_revisions()","find_event()","find_or_create_workflow()","find_workflow()","fire()","fire_and_forget?()","format()","get_app_dir_name()","get_children()","get_confirmation()","get_environment()","get_event()","get_root()","green()","included()","jobs()","kick()","kick()","kill()","log_file()","logger()","make_decision()","mass_dismiss()","mass_kill()","mass_stop()","message()","method?()","my_user()","new()","new()","new()","new()","new()","new()","new()","new()","new()","not_blocking_and_always()","notify_client()","notify_of()","notify_of()","option()","options()","parse_args()","past_flags()","perform()","perform()","perform()","perform_activity()","pet()","pet()","post()","print_tree()","red()","remove_tmp_deploy_repo()","restart()","restart()","restart()","restart()","root()","run_sub_activity()","running?()","schedule()","schedule_next_decision()","serializable_hash()","serializable_hash()","serializable_hash()","set_and_push_deploy_tag()","setup_and_go_to_deploy_repo()","sha_from_branch()","show()","signal()","signal()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","stop()","stop()","stop()","stop()","tid()","timeout()","to_s()","transform_keys()","tree()","tree_to_s()","underscore_keys()","update_status!()","uri()","validate_next_decision()","validate_next_decision()","verify_and_get_next_decision()","wake()","wake()","with_lock()","with_lock_with_defaults()","with_lock_without_defaults()","workflows()","capfile","gemfile","rakefile","delayed_job_backbeat","k61delayed_job_backbeat","s61delayed_job_backbeat","backbeat","unicorn_backbeat","k61unicorn_backbeat","s61unicorn_backbeat","c50mongo_backup"],"longSearchIndex":["api","api::authenticate","api::camelcase","api::cameljsonformatter","api::health","api::log","api::workflow","color","colorize","delayed","delayed::backend","delayed::backend::mongoid","delayed::backend::mongoid::job","groupon","groupon::financialengineering","groupon::financialengineering::capistrano","helper","helper::mongo","object","tree","tree::node","workflowserver","workflowserver::async","workflowserver::async::job","workflowserver::backbeatmongo","workflowserver::classmethods","workflowserver::client","workflowserver::config","workflowserver::delayedjoblogger","workflowserver::eventcomplete","workflowserver::eventnotfound","workflowserver::helper","workflowserver::helper::hashkeytransformations","workflowserver::httperror","workflowserver::invaliddecisionselection","workflowserver::invalideventstatus","workflowserver::invalidparameters","workflowserver::logger","workflowserver::models","workflowserver::models::activity","workflowserver::models::branch","workflowserver::models::decision","workflowserver::models::event","workflowserver::models::flag","workflowserver::models::signal","workflowserver::models::subactivity","workflowserver::models::timer","workflowserver::models::user","workflowserver::models::watchdog","workflowserver::models::workflow","workflowserver::models::workflowcompleteflag","workflowserver::outputformatter","workflowserver::timeout","workflowserver::waitforsubactivity","workflowserver::models::user#_id()","workflowserver::models::user#activity_endpoint()","workflowserver::delayedjoblogger::add()","workflowserver::models::event#add_decision()","object#app()","workflowserver::models::event#async_jobs()","workflowserver::models::event#blacklisted_fields()","workflowserver::models::activity#blocking?()","workflowserver::models::event#blocking?()","workflowserver::models::workflow#blocking?()","api::authenticate#call()","api::camelcase#call()","api::cameljsonformatter::call()","api::health#call()","api::log#call()","workflowserver::helper::hashkeytransformations::camelize_keys()","object#campfire_speak()","object#capture()","workflowserver::models::activity#change_status()","workflowserver::models::decision#change_status()","workflowserver::models::activity#child_completed()","workflowserver::models::decision#child_completed()","workflowserver::models::event#child_completed()","workflowserver::models::event#child_errored()","workflowserver::models::event#child_timeout()","workflowserver::models::event#cleanup()","color::colorize()","colorize#colorize()","object#commit_and_push()","object#commit_and_push_sox_artifact()","workflowserver::models::activity#completed()","workflowserver::models::decision#completed()","workflowserver::models::event#completed()","workflowserver::models::workflow#completed()","workflowserver::models::activity#continue()","api::cameljsonformatter::convert_object()","object#create_sox_artifact()","api::workflow#current_user()","object#deploy_already_tagged?()","tree#depth()","workflowserver::models::signal#depth()","workflowserver::models::event#destroy_jobs()","workflowserver::models::watchdog::dismiss()","workflowserver::config::environment()","workflowserver::models::activity#errored()","workflowserver::models::decision#errored()","workflowserver::models::event#errored()","workflowserver::models::workflow#errored()","workflowserver::async::job#event()","workflowserver::models::event#event_type()","workflowserver::async::job#failure()","workflowserver::models::watchdog::feed()","workflowserver::models::watchdog#feed()","object#find_deploy_tags_from_today()","object#find_deployed_revisions()","api::workflow#find_event()","workflowserver::find_or_create_workflow()","api::workflow#find_workflow()","workflowserver::models::timer#fire()","workflowserver::models::activity#fire_and_forget?()","workflowserver::outputformatter#format()","object#get_app_dir_name()","workflowserver::models::workflow#get_children()","groupon::financialengineering::capistrano::get_confirmation()","workflowserver::config::get_environment()","workflowserver::get_event()","workflowserver::config::get_root()","color::green()","workflowserver::logger::included()","workflowserver::async::job::jobs()","workflowserver::models::watchdog#kick()","workflowserver::models::watchdog::kick()","workflowserver::models::watchdog::kill()","workflowserver::config::log_file()","workflowserver::logger::logger()","workflowserver::client::make_decision()","workflowserver::models::watchdog::mass_dismiss()","workflowserver::models::watchdog::mass_kill()","workflowserver::models::watchdog::mass_stop()","workflowserver::invalidparameters#message()","workflowserver::models::activity#method?()","workflowserver::models::event#my_user()","api::authenticate::new()","api::camelcase::new()","api::health::new()","api::log::new()","helper::mongo::new()","tree::node::new()","workflowserver::backbeatmongo::new()","workflowserver::httperror::new()","workflowserver::invalidparameters::new()","workflowserver::models::activity#not_blocking_and_always()","workflowserver::models::event#notify_client()","workflowserver::client::notify_of()","workflowserver::models::event#notify_of()","workflowserver::config::option()","workflowserver::config::options()","object#parse_args()","workflowserver::models::event#past_flags()","workflowserver::async::job#perform()","workflowserver::backbeatmongo#perform()","workflowserver::models::watchdog#perform()","workflowserver::client::perform_activity()","workflowserver::models::watchdog::pet()","workflowserver::models::watchdog#pet()","workflowserver::client::post()","tree#print_tree()","color::red()","object#remove_tmp_deploy_repo()","object#restart()","workflowserver::models::activity#restart()","workflowserver::models::decision#restart()","workflowserver::models::event#restart()","workflowserver::config::root()","workflowserver::models::activity#run_sub_activity()","object#running?()","workflowserver::async::job::schedule()","workflowserver::schedule_next_decision()","workflowserver::models::decision#serializable_hash()","workflowserver::models::event#serializable_hash()","workflowserver::models::user#serializable_hash()","object#set_and_push_deploy_tag()","object#setup_and_go_to_deploy_repo()","object#sha_from_branch()","workflowserver::models::workflow#show()","object#signal()","workflowserver::models::workflow#signal()","helper::mongo::start()","helper::mongo#start()","object#start()","workflowserver::models::activity#start()","workflowserver::models::decision#start()","workflowserver::models::event#start()","workflowserver::models::flag#start()","workflowserver::models::signal#start()","workflowserver::models::timer#start()","workflowserver::models::watchdog::start()","workflowserver::models::workflow#start()","workflowserver::models::workflowcompleteflag#start()","helper::mongo#stop()","helper::mongo::stop()","object#stop()","workflowserver::models::watchdog::stop()","workflowserver::logger::tid()","workflowserver::models::event#timeout()","tree::node#to_s()","workflowserver::helper::hashkeytransformations::transform_keys()","tree#tree()","tree#tree_to_s()","workflowserver::helper::hashkeytransformations::underscore_keys()","workflowserver::models::event#update_status!()","object#uri()","workflowserver::models::activity#validate_next_decision()","workflowserver::models::branch#validate_next_decision()","workflowserver::models::activity#verify_and_get_next_decision()","workflowserver::models::watchdog#wake()","workflowserver::models::watchdog::wake()","workflowserver::models::event#with_lock()","workflowserver::models::event#with_lock_with_defaults()","workflowserver::models::event#with_lock_without_defaults()","workflowserver::models::user#workflows()","","","","","","","","","","",""],"info":[["Api","","Api.html","",""],["Api::Authenticate","","Api/Authenticate.html","",""],["Api::CamelCase","","Api/CamelCase.html","",""],["Api::CamelJsonFormatter","","Api/CamelJsonFormatter.html","",""],["Api::Health","","Api/Health.html","",""],["Api::Log","","Api/Log.html","",""],["Api::Workflow","","Api/Workflow.html","",""],["Color","","Color.html","",""],["Colorize","","Colorize.html","",""],["Delayed","","Delayed.html","",""],["Delayed::Backend","","Delayed/Backend.html","",""],["Delayed::Backend::Mongoid","","Delayed/Backend/Mongoid.html","",""],["Delayed::Backend::Mongoid::Job","","Delayed/Backend/Mongoid/Job.html","",""],["Groupon","","Groupon.html","",""],["Groupon::FinancialEngineering","","Groupon/FinancialEngineering.html","",""],["Groupon::FinancialEngineering::Capistrano","","Groupon/FinancialEngineering/Capistrano.html","",""],["Helper","","Helper.html","",""],["Helper::Mongo","","Helper/Mongo.html","",""],["Object","","Object.html","",""],["Tree","","Tree.html","",""],["Tree::Node","","Tree/Node.html","",""],["WorkflowServer","","WorkflowServer.html","",""],["WorkflowServer::Async","","WorkflowServer/Async.html","",""],["WorkflowServer::Async::Job","","WorkflowServer/Async/Job.html","",""],["WorkflowServer::BackbeatMongo","","WorkflowServer/BackbeatMongo.html","",""],["WorkflowServer::ClassMethods","","WorkflowServer/ClassMethods.html","",""],["WorkflowServer::Client","","WorkflowServer/Client.html","",""],["WorkflowServer::Config","","WorkflowServer/Config.html","",""],["WorkflowServer::DelayedJobLogger","","WorkflowServer/DelayedJobLogger.html","",""],["WorkflowServer::EventComplete","","WorkflowServer/EventComplete.html","",""],["WorkflowServer::EventNotFound","","WorkflowServer/EventNotFound.html","",""],["WorkflowServer::Helper","","WorkflowServer/Helper.html","",""],["WorkflowServer::Helper::HashKeyTransformations","","WorkflowServer/Helper/HashKeyTransformations.html","",""],["WorkflowServer::HttpError","","WorkflowServer/HttpError.html","",""],["WorkflowServer::InvalidDecisionSelection","","WorkflowServer/InvalidDecisionSelection.html","",""],["WorkflowServer::InvalidEventStatus","","WorkflowServer/InvalidEventStatus.html","",""],["WorkflowServer::InvalidParameters","","WorkflowServer/InvalidParameters.html","",""],["WorkflowServer::Logger","","WorkflowServer/Logger.html","",""],["WorkflowServer::Models","","WorkflowServer/Models.html","",""],["WorkflowServer::Models::Activity","","WorkflowServer/Models/Activity.html","",""],["WorkflowServer::Models::Branch","","WorkflowServer/Models/Branch.html","",""],["WorkflowServer::Models::Decision","","WorkflowServer/Models/Decision.html","",""],["WorkflowServer::Models::Event","","WorkflowServer/Models/Event.html","",""],["WorkflowServer::Models::Flag","","WorkflowServer/Models/Flag.html","",""],["WorkflowServer::Models::Signal","","WorkflowServer/Models/Signal.html","",""],["WorkflowServer::Models::SubActivity","","WorkflowServer/Models/SubActivity.html","",""],["WorkflowServer::Models::Timer","","WorkflowServer/Models/Timer.html","",""],["WorkflowServer::Models::User","","WorkflowServer/Models/User.html","","<p>This class represents a client application that consumes Backbeats API.\n"],["WorkflowServer::Models::Watchdog","","WorkflowServer/Models/Watchdog.html","",""],["WorkflowServer::Models::Workflow","","WorkflowServer/Models/Workflow.html","",""],["WorkflowServer::Models::WorkflowCompleteFlag","","WorkflowServer/Models/WorkflowCompleteFlag.html","",""],["WorkflowServer::OutputFormatter","","WorkflowServer/OutputFormatter.html","",""],["WorkflowServer::TimeOut","","WorkflowServer/TimeOut.html","",""],["WorkflowServer::WaitForSubActivity","","WorkflowServer/WaitForSubActivity.html","",""],["_id","WorkflowServer::Models::User","WorkflowServer/Models/User.html#method-i-_id","","<p>A UUID that identifies the user and doubles as their API token.\n"],["activity_endpoint","WorkflowServer::Models::User","WorkflowServer/Models/User.html#method-i-activity_endpoint","","<p>An HTTP endpoint that is called by Backbeat when it asks the user to\nperform an activity. This field …\n"],["add","WorkflowServer::DelayedJobLogger","WorkflowServer/DelayedJobLogger.html#method-c-add","(level, text)",""],["add_decision","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-add_decision","(decision_name)",""],["app","Object","Object.html#method-i-app","()",""],["async_jobs","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-async_jobs","()",""],["blacklisted_fields","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-blacklisted_fields","()","<p>These fields are not included in the hash sent out to the client\n"],["blocking?","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-blocking-3F","()",""],["blocking?","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-blocking-3F","()",""],["blocking?","WorkflowServer::Models::Workflow","WorkflowServer/Models/Workflow.html#method-i-blocking-3F","()",""],["call","Api::Authenticate","Api/Authenticate.html#method-i-call","(env)",""],["call","Api::CamelCase","Api/CamelCase.html#method-i-call","(env)",""],["call","Api::CamelJsonFormatter","Api/CamelJsonFormatter.html#method-c-call","(object, env)",""],["call","Api::Health","Api/Health.html#method-i-call","(env)",""],["call","Api::Log","Api/Log.html#method-i-call","(env)",""],["camelize_keys","WorkflowServer::Helper::HashKeyTransformations","WorkflowServer/Helper/HashKeyTransformations.html#method-c-camelize_keys","(object)",""],["campfire_speak","Object","Object.html#method-i-campfire_speak","(msg)",""],["capture","Object","Object.html#method-i-capture","(*args)",""],["change_status","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-change_status","(new_status, args = {})",""],["change_status","WorkflowServer::Models::Decision","WorkflowServer/Models/Decision.html#method-i-change_status","(new_status, args = {})",""],["child_completed","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-child_completed","(child)",""],["child_completed","WorkflowServer::Models::Decision","WorkflowServer/Models/Decision.html#method-i-child_completed","(child)",""],["child_completed","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-child_completed","(child)",""],["child_errored","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-child_errored","(child, error)",""],["child_timeout","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-child_timeout","(child, timeout_name)",""],["cleanup","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-cleanup","()",""],["colorize","Color","Color.html#method-c-colorize","(text, color_code)",""],["colorize","Colorize","Colorize.html#method-i-colorize","(text, color_code)",""],["commit_and_push","Object","Object.html#method-i-commit_and_push","()",""],["commit_and_push_sox_artifact","Object","Object.html#method-i-commit_and_push_sox_artifact","()",""],["completed","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-completed","()",""],["completed","WorkflowServer::Models::Decision","WorkflowServer/Models/Decision.html#method-i-completed","()",""],["completed","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-completed","()",""],["completed","WorkflowServer::Models::Workflow","WorkflowServer/Models/Workflow.html#method-i-completed","()",""],["continue","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-continue","()",""],["convert_object","Api::CamelJsonFormatter","Api/CamelJsonFormatter.html#method-c-convert_object","(object)",""],["create_sox_artifact","Object","Object.html#method-i-create_sox_artifact","()",""],["current_user","Api::Workflow","Api/Workflow.html#method-i-current_user","()",""],["deploy_already_tagged?","Object","Object.html#method-i-deploy_already_tagged-3F","()",""],["depth","Tree","Tree.html#method-i-depth","()",""],["depth","WorkflowServer::Models::Signal","WorkflowServer/Models/Signal.html#method-i-depth","()",""],["destroy_jobs","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-destroy_jobs","()",""],["dismiss","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-dismiss","(subject, name = :timeout)",""],["environment","WorkflowServer::Config","WorkflowServer/Config.html#method-c-environment","()",""],["errored","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-errored","(error)",""],["errored","WorkflowServer::Models::Decision","WorkflowServer/Models/Decision.html#method-i-errored","(error)",""],["errored","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-errored","(error)",""],["errored","WorkflowServer::Models::Workflow","WorkflowServer/Models/Workflow.html#method-i-errored","(error)",""],["event","WorkflowServer::Async::Job","WorkflowServer/Async/Job.html#method-i-event","()",""],["event_type","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-event_type","()",""],["failure","WorkflowServer::Async::Job","WorkflowServer/Async/Job.html#method-i-failure","()","<p>add a failure hook when everything fails\n"],["feed","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-feed","(subject, name = :timeout)",""],["feed","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-i-feed","()",""],["find_deploy_tags_from_today","Object","Object.html#method-i-find_deploy_tags_from_today","()",""],["find_deployed_revisions","Object","Object.html#method-i-find_deployed_revisions","()",""],["find_event","Api::Workflow","Api/Workflow.html#method-i-find_event","(params, event_type = nil)",""],["find_or_create_workflow","WorkflowServer","WorkflowServer.html#method-c-find_or_create_workflow","(options = {})","<p>options include workflow_type: workflow_type, subject_klass: subject_klass,\nsubject_id: subject_id, decider: …\n"],["find_workflow","Api::Workflow","Api/Workflow.html#method-i-find_workflow","(id)",""],["fire","WorkflowServer::Models::Timer","WorkflowServer/Models/Timer.html#method-i-fire","()",""],["fire_and_forget?","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-fire_and_forget-3F","()",""],["format","WorkflowServer::OutputFormatter","WorkflowServer/OutputFormatter.html#method-i-format","(event)",""],["get_app_dir_name","Object","Object.html#method-i-get_app_dir_name","()",""],["get_children","WorkflowServer::Models::Workflow","WorkflowServer/Models/Workflow.html#method-i-get_children","()",""],["get_confirmation","Groupon::FinancialEngineering::Capistrano","Groupon/FinancialEngineering/Capistrano.html#method-c-get_confirmation","(confirm_string = \"hell yes\", reason = \"do something dangerous\")",""],["get_environment","WorkflowServer::Config","WorkflowServer/Config.html#method-c-get_environment","()",""],["get_event","WorkflowServer","WorkflowServer.html#method-c-get_event","(id)",""],["get_root","WorkflowServer::Config","WorkflowServer/Config.html#method-c-get_root","()",""],["green","Color","Color.html#method-c-green","(text)",""],["included","WorkflowServer::Logger","WorkflowServer/Logger.html#method-c-included","(klass)",""],["jobs","WorkflowServer::Async::Job","WorkflowServer/Async/Job.html#method-c-jobs","(event)",""],["kick","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-i-kick","()",""],["kick","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-kick","(subject, name = :timeout)",""],["kill","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-kill","(subject, name = :timeout)",""],["log_file","WorkflowServer::Config","WorkflowServer/Config.html#method-c-log_file","()",""],["logger","WorkflowServer::Logger","WorkflowServer/Logger.html#method-c-logger","()",""],["make_decision","WorkflowServer::Client","WorkflowServer/Client.html#method-c-make_decision","(decision)",""],["mass_dismiss","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-mass_dismiss","(subject)",""],["mass_kill","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-mass_kill","(subject)",""],["mass_stop","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-mass_stop","(subject)",""],["message","WorkflowServer::InvalidParameters","WorkflowServer/InvalidParameters.html#method-i-message","()",""],["method?","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-method-3F","()",""],["my_user","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-my_user","()",""],["new","Api::Authenticate","Api/Authenticate.html#method-c-new","(app)",""],["new","Api::CamelCase","Api/CamelCase.html#method-c-new","(app)",""],["new","Api::Health","Api/Health.html#method-c-new","(app)",""],["new","Api::Log","Api/Log.html#method-c-new","(app)",""],["new","Helper::Mongo","Helper/Mongo.html#method-c-new","(port = 27017)",""],["new","Tree::Node","Tree/Node.html#method-c-new","(model)",""],["new","WorkflowServer::BackbeatMongo","WorkflowServer/BackbeatMongo.html#method-c-new","(options = {})",""],["new","WorkflowServer::HttpError","WorkflowServer/HttpError.html#method-c-new","(message, response)",""],["new","WorkflowServer::InvalidParameters","WorkflowServer/InvalidParameters.html#method-c-new","(raw_message)",""],["not_blocking_and_always","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-not_blocking_and_always","()",""],["notify_client","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-notify_client","(notification, error_data)",""],["notify_of","WorkflowServer::Client","WorkflowServer/Client.html#method-c-notify_of","(event, notification, error = nil)",""],["notify_of","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-notify_of","(notification, error = nil)",""],["option","WorkflowServer::Config","WorkflowServer/Config.html#method-c-option","(field)",""],["options","WorkflowServer::Config","WorkflowServer/Config.html#method-c-options","()",""],["parse_args","Object","Object.html#method-i-parse_args","(args)",""],["past_flags","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-past_flags","()",""],["perform","WorkflowServer::Async::Job","WorkflowServer/Async/Job.html#method-i-perform","()",""],["perform","WorkflowServer::BackbeatMongo","WorkflowServer/BackbeatMongo.html#method-i-perform","()",""],["perform","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-i-perform","()",""],["perform_activity","WorkflowServer::Client","WorkflowServer/Client.html#method-c-perform_activity","(activity)",""],["pet","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-pet","(subject, name = :timeout)",""],["pet","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-i-pet","()",""],["post","WorkflowServer::Client","WorkflowServer/Client.html#method-c-post","(url, params = {})",""],["print_tree","Tree","Tree.html#method-i-print_tree","()",""],["red","Color","Color.html#method-c-red","(text)",""],["remove_tmp_deploy_repo","Object","Object.html#method-i-remove_tmp_deploy_repo","()",""],["restart","Object","Object.html#method-i-restart","(pidfile)",""],["restart","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-restart","()",""],["restart","WorkflowServer::Models::Decision","WorkflowServer/Models/Decision.html#method-i-restart","()",""],["restart","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-restart","()",""],["root","WorkflowServer::Config","WorkflowServer/Config.html#method-c-root","()",""],["run_sub_activity","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-run_sub_activity","(options = {})",""],["running?","Object","Object.html#method-i-running-3F","(pidfile)",""],["schedule","WorkflowServer::Async::Job","WorkflowServer/Async/Job.html#method-c-schedule","(options = {}, run_at = Time.now)",""],["schedule_next_decision","WorkflowServer","WorkflowServer.html#method-c-schedule_next_decision","(workflow)",""],["serializable_hash","WorkflowServer::Models::Decision","WorkflowServer/Models/Decision.html#method-i-serializable_hash","(options = {})",""],["serializable_hash","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-serializable_hash","(options = {})",""],["serializable_hash","WorkflowServer::Models::User","WorkflowServer/Models/User.html#method-i-serializable_hash","(options = {})","<p>A method that blacklists certain fields before converting the object to a\nhash. This method is used by …\n"],["set_and_push_deploy_tag","Object","Object.html#method-i-set_and_push_deploy_tag","()",""],["setup_and_go_to_deploy_repo","Object","Object.html#method-i-setup_and_go_to_deploy_repo","()",""],["sha_from_branch","Object","Object.html#method-i-sha_from_branch","(arg)",""],["show","WorkflowServer::Models::Workflow","WorkflowServer/Models/Workflow.html#method-i-show","()",""],["signal","Object","Object.html#method-i-signal","(signal, pidfile)","<p>Signal a process.\n"],["signal","WorkflowServer::Models::Workflow","WorkflowServer/Models/Workflow.html#method-i-signal","(name)",""],["start","Helper::Mongo","Helper/Mongo.html#method-c-start","(port)",""],["start","Helper::Mongo","Helper/Mongo.html#method-i-start","()",""],["start","Object","Object.html#method-i-start","(pidfile)",""],["start","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-start","()",""],["start","WorkflowServer::Models::Decision","WorkflowServer/Models/Decision.html#method-i-start","()",""],["start","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-start","()",""],["start","WorkflowServer::Models::Flag","WorkflowServer/Models/Flag.html#method-i-start","()",""],["start","WorkflowServer::Models::Signal","WorkflowServer/Models/Signal.html#method-i-start","()",""],["start","WorkflowServer::Models::Timer","WorkflowServer/Models/Timer.html#method-i-start","()",""],["start","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-start","(subject, name = :timeout, starves_in = 15.minutes)",""],["start","WorkflowServer::Models::Workflow","WorkflowServer/Models/Workflow.html#method-i-start","()",""],["start","WorkflowServer::Models::WorkflowCompleteFlag","WorkflowServer/Models/WorkflowCompleteFlag.html#method-i-start","()",""],["stop","Helper::Mongo","Helper/Mongo.html#method-i-stop","()",""],["stop","Helper::Mongo","Helper/Mongo.html#method-c-stop","(port)",""],["stop","Object","Object.html#method-i-stop","(pidfile)",""],["stop","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-stop","(subject, name = :timeout)",""],["tid","WorkflowServer::Logger","WorkflowServer/Logger.html#method-c-tid","(option = nil)","<p>Returns a uniq tid\n"],["timeout","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-timeout","(timeout)",""],["to_s","Tree::Node","Tree/Node.html#method-i-to_s","()",""],["transform_keys","WorkflowServer::Helper::HashKeyTransformations","WorkflowServer/Helper/HashKeyTransformations.html#method-c-transform_keys","(object, &block)",""],["tree","Tree","Tree.html#method-i-tree","()",""],["tree_to_s","Tree","Tree.html#method-i-tree_to_s","(first_call = true , nodes = [])",""],["underscore_keys","WorkflowServer::Helper::HashKeyTransformations","WorkflowServer/Helper/HashKeyTransformations.html#method-c-underscore_keys","(object)",""],["update_status!","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-update_status-21","(new_status, error = nil)",""],["uri","Object","Object.html#method-i-uri","(template, event)",""],["validate_next_decision","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-validate_next_decision","(next_decision_arg)",""],["validate_next_decision","WorkflowServer::Models::Branch","WorkflowServer/Models/Branch.html#method-i-validate_next_decision","(next_decision_arg)","<p>A branchs is exactly the same as an activity but provides a distinction\nbetween activities that do work …\n"],["verify_and_get_next_decision","WorkflowServer::Models::Activity","WorkflowServer/Models/Activity.html#method-i-verify_and_get_next_decision","(next_decision_arg)",""],["wake","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-i-wake","()",""],["wake","WorkflowServer::Models::Watchdog","WorkflowServer/Models/Watchdog.html#method-c-wake","(subject, name = :timeout)",""],["with_lock","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-with_lock","(options = {}, &block)",""],["with_lock_with_defaults","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-with_lock_with_defaults","(options = {}, &block)",""],["with_lock_without_defaults","WorkflowServer::Models::Event","WorkflowServer/Models/Event.html#method-i-with_lock_without_defaults","(options = {}, &block)",""],["workflows","WorkflowServer::Models::User","WorkflowServer/Models/User.html#method-i-workflows","","<p>A user has a relation to all workflows created by that user. A user can\nonly see workflows that belong …\n"],["Capfile","","Capfile.html","","<p>load ‘deploy’ if respond_to?(:namespace) # cap2 differentiator\n<p># Uncomment if you are using Rails’ asset …\n"],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p>gem ‘unicorn’\n<p>gem ‘mongoid’ gem ‘mongoid-locker’ gem ‘delayed_job_mongoid’ gem\n‘mongoid-indifferent-access’ …\n"],["Rakefile","","Rakefile.html","","<p>#!/usr/bin/env rake\n<p>require_relative ‘app’ require ‘rake’\n<p>MODELS_TO_INDEX = [WorkflowServer::Models.constants …\n"],["delayed_job_backbeat","","config/roller/accounting_backbeat_delayed_job_init/etc/init_d/delayed_job_backbeat.html","","<p>#!/bin/bash #\n==========================================================================\n# resque - start …\n"],["K61delayed_job_backbeat","","config/roller/accounting_backbeat_delayed_job_init/etc/rc_d/K61delayed_job_backbeat.html","","<p>#!/bin/sh exec /usr/local/etc/init.d/delayed_job_backbeat stop\n"],["S61delayed_job_backbeat","","config/roller/accounting_backbeat_delayed_job_init/etc/rc_d/S61delayed_job_backbeat.html","","<p>#!/bin/sh exec /usr/local/etc/init.d/delayed_job_backbeat start\n"],["backbeat","","config/roller/accounting_backbeat_logrotate_config/etc/logrotate_d/backbeat.html","","<p># as found on unicorn.bogomips.org/examples/logrotate.conf and heavily\nmodified /var/groupon/backbeat/shared/log/ …\n"],["unicorn_backbeat","","config/roller/accounting_backbeat_unicorn_init/etc/init_d/unicorn_backbeat.html","","<p>#!/bin/sh # # init.d script for single or multiple unicorn installations.\nexpects at least one .conf# …\n"],["K61unicorn_backbeat","","config/roller/accounting_backbeat_unicorn_init/etc/rc_d/K61unicorn_backbeat.html","","<p>#!/bin/sh exec /usr/local/etc/init.d/unicorn_backbeat stop\n"],["S61unicorn_backbeat","","config/roller/accounting_backbeat_unicorn_init/etc/rc_d/S61unicorn_backbeat.html","","<p>#!/bin/sh exec /usr/local/etc/init.d/unicorn_backbeat start\n"],["C50mongo_backup","","config/roller/accounting_mongo_backup/config/C50mongo_backup.html","","<p>create_directory ‘/var/groupon/mongo_backup’, ‘mongo:mongo’\n<p>mongo = host.params\n<p>if !mongo.kind_of? Array …\n"]]}}