{"revision":"20131205","generator":{"version":"0.3.0"},"resources":{"workflows":{"methods":{"create":{"id":"workflows.create","path":"workflows","route":"/workflows(.:format)","httpMethod":"POST","description":"Creates a new workflow. If the workflow with the given parameter already exists, returns the existing workflow.","labels":[],"parameters":{"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","required":true,"location":"body","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","required":true,"location":"body","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","required":true,"location":"body","type":"string"},"name":{"description":"Name of the workflow","required":true,"location":"body","type":"string"}},"response":{"$ref":"workflows.create.response"}},"backfill_timer":{"id":"workflows.id.backfill.timer.name.backfill_timer","path":"workflows/{id}/backfill/timer/{name}","route":"/workflows/:id/backfill/timer/:name(.:format)","httpMethod":"PUT","description":"Use this endpoint to backfill existing workflows to backbeat. Schedule timers for things that are supposed to go off in future.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"name":{"description":"the name for the timer","required":true,"location":"url","type":"string"},"run_at":{"description":"The time when this timer should go off. If in past, the timer will fire immediately.","required":true,"location":"body","type":"string"}},"response":{"$ref":"workflows.id.backfill.timer.name.backfill_timer.response"}},"backfill_decision":{"id":"workflows.id.backfill.decision.name.backfill_decision","path":"workflows/{id}/backfill/decision/{name}","route":"/workflows/:id/backfill/decision/:name(.:format)","httpMethod":"PUT","description":"Use this endpoint to backfill existing workflows to backbeat. Add historical decisions that were completed successfully in the past.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"name":{"description":"the name for the decision","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.id.backfill.decision.name.backfill_decision.response"}},"get_workflows":{"id":"workflows.get_workflows","path":"workflows","route":"/workflows(.:format)","httpMethod":"PUT","description":"Get workflows filtered by workflow_type, decider, subject and the workflow name.","labels":[],"parameters":{"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","required":false,"location":"body","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","required":false,"location":"body","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","required":false,"location":"body","type":"string"},"name":{"description":"Name for the workflow","required":false,"location":"body","type":"string"}},"response":{"$ref":"workflows.get_workflows.response"}},"get_workflow":{"id":"workflows.id.get_workflow","path":"workflows/{id}","route":"/workflows/:id(.:format)","httpMethod":"GET","description":"Get workflow identified by the id.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.id.get_workflow.response"}},"get_flags":{"id":"workflows.id.flags.get_flags","path":"workflows/{id}/flags","route":"/workflows/:id/flags(.:format)","httpMethod":"GET","description":"Get all the flags on a workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"status":{"description":"status of the event","required":false,"location":"query","type":"string"}},"response":{"$ref":"workflows.id.flags.get_flags.response"}},"get_signals":{"id":"workflows.id.signals.get_signals","path":"workflows/{id}/signals","route":"/workflows/:id/signals(.:format)","httpMethod":"GET","description":"Get all the signals on a workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"status":{"description":"status of the event","required":false,"location":"query","type":"string"}},"response":{"$ref":"workflows.id.signals.get_signals.response"}},"get_decisions":{"id":"workflows.id.decisions.get_decisions","path":"workflows/{id}/decisions","route":"/workflows/:id/decisions(.:format)","httpMethod":"GET","description":"Get all the decisions on a workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"status":{"description":"status of the event","required":false,"location":"query","type":"string"}},"response":{"$ref":"workflows.id.decisions.get_decisions.response"}},"get_activities":{"id":"workflows.id.activities.get_activities","path":"workflows/{id}/activities","route":"/workflows/:id/activities(.:format)","httpMethod":"GET","description":"Get all the activities on a workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"status":{"description":"status of the event","required":false,"location":"query","type":"string"}},"response":{"$ref":"workflows.id.activities.get_activities.response"}},"get_timers":{"id":"workflows.id.timers.get_timers","path":"workflows/{id}/timers","route":"/workflows/:id/timers(.:format)","httpMethod":"GET","description":"Get all the timers on a workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"status":{"description":"status of the event","required":false,"location":"query","type":"string"}},"response":{"$ref":"workflows.id.timers.get_timers.response"}},"get_events":{"id":"workflows.id.events.get_events","path":"workflows/{id}/events","route":"/workflows/:id/events(.:format)","httpMethod":"GET","description":"Get all the events on a workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"status":{"description":"status of the event","required":false,"location":"query","type":"string"}},"response":{"$ref":"workflows.id.events.get_events.response"}},"get_workflow_tree":{"id":"workflows.id.tree.get_workflow_tree","path":"workflows/{id}/tree","route":"/workflows/:id/tree(.:format)","httpMethod":"GET","description":"Get the workflow tree as a hash.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.id.tree.get_workflow_tree.response"}},"get_workflow_status":{"id":"workflows.id.status.get_workflow_status","path":"workflows/{id}/status","route":"/workflows/:id/status(.:format)","httpMethod":"GET","description":"Get the workflow status.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.id.status.get_workflow_status.response"}},"print_workflow_tree":{"id":"workflows.id.tree.print.print_workflow_tree","path":"workflows/{id}/tree/print","route":"/workflows/:id/tree/print(.:format)","httpMethod":"GET","description":"Get the workflow tree in a pretty print color encoded string format.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.id.tree.print.print_workflow_tree.response"}},"signal_workflow":{"id":"workflows.id.signal.name.signal_workflow","path":"workflows/{id}/signal/{name}","route":"/workflows/:id/signal/:name(.:format)","httpMethod":"POST","description":"Send a signal to the workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"name":{"description":"the signal name","required":true,"location":"url","type":"string"},"options":{"description":"the options for the signal","required":false,"location":"body","properties":{"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","required":false,"location":"body","properties":{},"type":"object"},"client_metadata":{"description":"Clients should use this field to store metadata with the events e.g. build version, process pid etc.","required":false,"location":"body","properties":{},"type":"object"}},"type":"object"}},"response":{"$ref":"workflows.id.signal.name.signal_workflow.response"}},"pause_workflow":{"id":"workflows.id.pause.pause_workflow","path":"workflows/{id}/pause","route":"/workflows/:id/pause(.:format)","httpMethod":"PUT","description":"Pause an open workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.id.pause.pause_workflow.response"}},"resume_workflow":{"id":"workflows.id.resume.resume_workflow","path":"workflows/{id}/resume","route":"/workflows/:id/resume(.:format)","httpMethod":"PUT","description":"Resume a paused workflow.","labels":[],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.id.resume.resume_workflow.response"}}}},"workflows_events":{"methods":{"get_event":{"id":"workflows.workflow_id.events.id.get_event","path":"workflows/{workflow_id}/events/{id}","route":"/workflows/:workflow_id/events/:id(.:format)","httpMethod":"GET","description":"Get the event identified by the id.","labels":[],"parameters":{"workflow_id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.workflow_id.events.id.get_event.response"}},"restart_event":{"id":"workflows.workflow_id.events.id.restart.restart_event","path":"workflows/{workflow_id}/events/{id}/restart","route":"/workflows/:workflow_id/events/:id/restart(.:format)","httpMethod":"PUT","description":"Restart a failed activity or decision.","labels":[],"parameters":{"workflow_id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.workflow_id.events.id.restart.restart_event.response"}},"history_decisions":{"id":"workflows.workflow_id.events.id.history_decisions.history_decisions","path":"workflows/{workflow_id}/events/{id}/history_decisions","route":"/workflows/:workflow_id/events/:id/history_decisions(.:format)","httpMethod":"GET","description":"Get all the decisions that have occurred in the past based off this decision","labels":[],"parameters":{"workflow_id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.workflow_id.events.id.history_decisions.history_decisions.response"}},"get_event_tree":{"id":"workflows.workflow_id.events.id.tree.get_event_tree","path":"workflows/{workflow_id}/events/{id}/tree","route":"/workflows/:workflow_id/events/:id/tree(.:format)","httpMethod":"GET","description":"Get the event tree as a hash.","labels":[],"parameters":{"workflow_id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.workflow_id.events.id.tree.get_event_tree.response"}},"print_event_tree":{"id":"workflows.workflow_id.events.id.tree.print.print_event_tree","path":"workflows/{workflow_id}/events/{id}/tree/print","route":"/workflows/:workflow_id/events/:id/tree/print(.:format)","httpMethod":"GET","description":"Get the event tree in a pretty print color encoded string format.","labels":[],"parameters":{"workflow_id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.workflow_id.events.id.tree.print.print_event_tree.response"}},"decisions":{"id":"workflows.workflow_id.events.id.decisions.decisions","path":"workflows/{workflow_id}/events/{id}/decisions","route":"/workflows/:workflow_id/events/:id/decisions(.:format)","httpMethod":"POST","description":"Add new decisions to an event.","labels":[],"parameters":{"workflow_id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"id":{"description":"the activity or decision id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.workflow_id.events.id.decisions.decisions.response"}},"change_status":{"id":"workflows.workflow_id.events.id.status.new_status.change_status","path":"workflows/{workflow_id}/events/{id}/status/{new_status}","route":"/workflows/:workflow_id/events/:id/status/:new_status(.:format)","httpMethod":"PUT","description":"Update the status on an event (use this endpoint for deciding, deciding_complete, completed, errored).","labels":[],"parameters":{"workflow_id":{"description":"the workflow id","required":true,"location":"url","type":"string"},"id":{"description":"the activity or decision id","required":true,"location":"url","type":"string"}},"response":{"$ref":"workflows.workflow_id.events.id.status.new_status.change_status.response"}},"run_activity":{"id":"workflows.workflow_id.events.id.run_sub_activity.run_activity","path":"workflows/{workflow_id}/events/{id}/run_sub_activity","route":"/workflows/:workflow_id/events/:id/run_sub_activity(.:format)","httpMethod":"PUT","description":"Run a nested activity from inside an activity.","labels":[],"parameters":{"sub_activity":{"description":"Define the nested activity.","location":"body","properties":{"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"mode":{"description":"Defines the concurrency level. Valid values are blocking, non_blocking and fire_and_forget. 1) blocking implies this activity will execute in isolation 2) non_blocking implies other activities can execute while this one is running. The parent of this activity will wait for this activity to complete before calling complete on itself 3) fire_and_forget is similar to non_blocking except the parent won't wait for this activity to complete. DEFAULT is blocking","type":"string"},"always":{"type":"string"},"retry":{"description":"The number of times this activity will be retried on error. Default is 6.","type":"integer"},"retry_interval":{"description":"The retry interval. Default is 20 minutes","type":"integer"},"time_out":{"description":"Default to 2 days","type":"integer"}},"type":"object"}},"response":{"$ref":"workflows.workflow_id.events.id.run_sub_activity.run_activity.response"}}}},"events":{"methods":{"get_event":{"id":"events.id.get_event","path":"events/{id}","route":"/events/:id(.:format)","httpMethod":"GET","description":"Get the event identified by the id.","labels":[],"parameters":{"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"events.id.get_event.response"}},"restart_event":{"id":"events.id.restart.restart_event","path":"events/{id}/restart","route":"/events/:id/restart(.:format)","httpMethod":"PUT","description":"Restart a failed activity or decision.","labels":[],"parameters":{"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"events.id.restart.restart_event.response"}},"history_decisions":{"id":"events.id.history_decisions.history_decisions","path":"events/{id}/history_decisions","route":"/events/:id/history_decisions(.:format)","httpMethod":"GET","description":"Get all the decisions that have occurred in the past based off this decision","labels":[],"parameters":{"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"events.id.history_decisions.history_decisions.response"}},"get_event_tree":{"id":"events.id.tree.get_event_tree","path":"events/{id}/tree","route":"/events/:id/tree(.:format)","httpMethod":"GET","description":"Get the event tree as a hash.","labels":[],"parameters":{"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"events.id.tree.get_event_tree.response"}},"print_event_tree":{"id":"events.id.tree.print.print_event_tree","path":"events/{id}/tree/print","route":"/events/:id/tree/print(.:format)","httpMethod":"GET","description":"Get the event tree in a pretty print color encoded string format.","labels":[],"parameters":{"id":{"description":"the event id","required":true,"location":"url","type":"string"}},"response":{"$ref":"events.id.tree.print.print_event_tree.response"}},"decisions":{"id":"events.id.decisions.decisions","path":"events/{id}/decisions","route":"/events/:id/decisions(.:format)","httpMethod":"POST","description":"Add new decisions to an event.","labels":[],"parameters":{"id":{"description":"the activity or decision id","required":true,"location":"url","type":"string"}},"response":{"$ref":"events.id.decisions.decisions.response"}},"change_status":{"id":"events.id.status.new_status.change_status","path":"events/{id}/status/{new_status}","route":"/events/:id/status/:new_status(.:format)","httpMethod":"PUT","description":"Update the status on an event (use this endpoint for deciding, deciding_complete, completed, errored).","labels":[],"parameters":{"id":{"description":"the activity or decision id","required":true,"location":"url","type":"string"}},"response":{"$ref":"events.id.status.new_status.change_status.response"}},"run_activity":{"id":"events.id.run_sub_activity.run_activity","path":"events/{id}/run_sub_activity","route":"/events/:id/run_sub_activity(.:format)","httpMethod":"PUT","description":"Run a nested activity from inside an activity.","labels":[],"parameters":{"sub_activity":{"description":"Define the nested activity.","location":"body","properties":{"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"mode":{"description":"Defines the concurrency level. Valid values are blocking, non_blocking and fire_and_forget. 1) blocking implies this activity will execute in isolation 2) non_blocking implies other activities can execute while this one is running. The parent of this activity will wait for this activity to complete before calling complete on itself 3) fire_and_forget is similar to non_blocking except the parent won't wait for this activity to complete. DEFAULT is blocking","type":"string"},"always":{"type":"string"},"retry":{"description":"The number of times this activity will be retried on error. Default is 6.","type":"integer"},"retry_interval":{"description":"The retry interval. Default is 20 minutes","type":"integer"},"time_out":{"description":"Default to 2 days","type":"integer"}},"type":"object"}},"response":{"$ref":"events.id.run_sub_activity.run_activity.response"}}}},"debug":{"methods":{"get_error_workflows":{"id":"debug.error_workflows.get_error_workflows","path":"debug/error_workflows","route":"/debug/error_workflows(.:format)","httpMethod":"GET","description":"returns workflows that have something in error or timeout state","labels":["deprecated"],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"debug.error_workflows.get_error_workflows.response"}},"get_paused_workflows":{"id":"debug.paused_workflows.get_paused_workflows","path":"debug/paused_workflows","route":"/debug/paused_workflows(.:format)","httpMethod":"GET","description":"returns paused workflows","labels":["deprecated"],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"debug.paused_workflows.get_paused_workflows.response"}},"get_stuck_workflows":{"id":"debug.stuck_workflows.get_stuck_workflows","path":"debug/stuck_workflows","route":"/debug/stuck_workflows(.:format)","httpMethod":"GET","description":"returns workflows that have > 0 open decisions and 0 executing decisions","labels":["deprecated"],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"debug.stuck_workflows.get_stuck_workflows.response"}},"long_running_events":{"id":"debug.long_running_events.long_running_events","path":"debug/long_running_events","route":"/debug/long_running_events(.:format)","httpMethod":"GET","description":"returns workflows with events executing for over 24 hours","labels":["deprecated"],"parameters":{},"response":{"$ref":"debug.long_running_events.long_running_events.response"}},"get_workflows_with_multiple_executing_decisions":{"id":"debug.multiple_executing_decisions.get_workflows_with_multiple_executing_decisions","path":"debug/multiple_executing_decisions","route":"/debug/multiple_executing_decisions(.:format)","httpMethod":"GET","description":"returns workflows that have more than one decision executing simultaneously","labels":["deprecated"],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"debug.multiple_executing_decisions.get_workflows_with_multiple_executing_decisions.response"}},"get_inconsistent_workflows":{"id":"debug.inconsistent_workflows.get_inconsistent_workflows","path":"debug/inconsistent_workflows","route":"/debug/inconsistent_workflows(.:format)","httpMethod":"GET","description":"returns workflows that are in an inconsistent state","labels":["deprecated"],"parameters":{"id":{"description":"the workflow id","required":true,"location":"url","type":"string"}},"response":{"$ref":"debug.inconsistent_workflows.get_inconsistent_workflows.response"}}}}},"schemas":{"workflows.create.response":{"id":"workflows.create.response","type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"workflows.get_workflows.response":{"workflows":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"workflows.get_workflows.response"},"workflows.id.get_workflow.response":{"id":"workflows.id.get_workflow.response","type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"workflows.id.flags.get_flags.response":{"flags":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"type":"object"},"type":"array"},"id":"workflows.id.flags.get_flags.response"},"workflows.id.signals.get_signals.response":{"signals":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"type":"object"},"type":"array"},"id":"workflows.id.signals.get_signals.response"},"workflows.id.decisions.get_decisions.response":{"decisions":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"type":"object"},"type":"array"},"id":"workflows.id.decisions.get_decisions.response"},"workflows.id.activities.get_activities.response":{"activities":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"mode":{"description":"Defines the concurrency level. Valid values are blocking, non_blocking and fire_and_forget. 1) blocking implies this activity will execute in isolation 2) non_blocking implies other activities can execute while this one is running. The parent of this activity will wait for this activity to complete before calling complete on itself 3) fire_and_forget is similar to non_blocking except the parent won't wait for this activity to complete. DEFAULT is blocking","type":"string"},"always":{"type":"string"},"retry":{"description":"The number of times this activity will be retried on error. Default is 6.","type":"integer"},"retry_interval":{"description":"The retry interval. Default is 20 minutes","type":"integer"},"time_out":{"description":"Default to 2 days","type":"integer"},"valid_next_decisions":{"description":"The range of valid next decision. next_decision can be null, none or one of the values from valid_next_decisions","type":"array"},"result":{"description":"Use this field to store the result of an activity","type":"string"},"next_decision":{"description":"Use this field to schedule the next decision when this activity completes","type":"string"}},"type":"object"},"type":"array"},"id":"workflows.id.activities.get_activities.response"},"workflows.id.timers.get_timers.response":{"timers":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"fires_at":{"type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"workflows.id.timers.get_timers.response"},"workflows.id.events.get_events.response":{"events":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"type":"object"},"type":"array"},"id":"workflows.id.events.get_events.response"},"workflows.id.tree.get_workflow_tree.response":{"id":"workflows.id.tree.get_workflow_tree.response","type":{"description":"event type","type":"string"},"status":{"type":"string"},"name":{"type":"string"},"children":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"status":{"type":"string"},"name":{"type":"string"}},"type":"object"},"type":"array"}},"workflows.id.status.get_workflow_status.response":{"status":{"description":"the workflow status","type":"string"},"id":"workflows.id.status.get_workflow_status.response"},"workflows.id.tree.print.print_workflow_tree.response":{"print":{"description":"the workflow tree in a color coded string format.","type":"string"},"id":"workflows.id.tree.print.print_workflow_tree.response"},"workflows.id.signal.name.signal_workflow.response":{"id":"workflows.id.signal.name.signal_workflow.response","type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"workflows.workflow_id.events.id.get_event.response":{"id":"workflows.workflow_id.events.id.get_event.response","type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"workflows.workflow_id.events.id.history_decisions.history_decisions.response":{"decisions":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"type":"object"},"type":"array"},"id":"workflows.workflow_id.events.id.history_decisions.history_decisions.response"},"workflows.workflow_id.events.id.tree.get_event_tree.response":{"id":"workflows.workflow_id.events.id.tree.get_event_tree.response","type":{"description":"event type","type":"string"},"status":{"type":"string"},"name":{"type":"string"},"children":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"status":{"type":"string"},"name":{"type":"string"}},"type":"object"},"type":"array"}},"workflows.workflow_id.events.id.tree.print.print_event_tree.response":{"print":{"description":"the event tree in a color coded string format.","type":"string"},"id":"workflows.workflow_id.events.id.tree.print.print_event_tree.response"},"events.id.get_event.response":{"id":"events.id.get_event.response","type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"events.id.history_decisions.history_decisions.response":{"decisions":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"}},"type":"object"},"type":"array"},"id":"events.id.history_decisions.history_decisions.response"},"events.id.tree.get_event_tree.response":{"id":"events.id.tree.get_event_tree.response","type":{"description":"event type","type":"string"},"status":{"type":"string"},"name":{"type":"string"},"children":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"status":{"type":"string"},"name":{"type":"string"}},"type":"object"},"type":"array"}},"events.id.tree.print.print_event_tree.response":{"print":{"description":"the event tree in a color coded string format.","type":"string"},"id":"events.id.tree.print.print_event_tree.response"},"debug.error_workflows.get_error_workflows.response":{"error_workflows":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"debug.error_workflows.get_error_workflows.response"},"debug.paused_workflows.get_paused_workflows.response":{"paused_workflows":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"debug.paused_workflows.get_paused_workflows.response"},"debug.stuck_workflows.get_stuck_workflows.response":{"paused_workflows":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"debug.stuck_workflows.get_stuck_workflows.response"},"debug.long_running_events.long_running_events.response":{"long_running_events":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"debug.long_running_events.long_running_events.response"},"debug.multiple_executing_decisions.get_workflows_with_multiple_executing_decisions.response":{"workflow":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"debug.multiple_executing_decisions.get_workflows_with_multiple_executing_decisions.response"},"debug.inconsistent_workflows.get_inconsistent_workflows.response":{"inconsistent_workflow":{"items":{"properties":{"id":{"description":"uuid","type":"string"},"type":{"description":"event type","type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"status":{"type":"string"},"name":{"type":"string"},"client_data":{"description":"Clients should use this field to store event specific information e.g. arguments for activities, client library specific options etc.","properties":{},"type":"object"},"workflow_id":{"type":"string"},"parent_id":{"type":"string"},"workflow_type":{"description":"The type of workflow e.g. approval_workflow, payment_workflow","type":"string"},"subject":{"description":"Subject is the entity on which this workflow is defined. It can be a model, date or a combination of things that uniquely define the workflow entity","properties":{},"type":"object"},"decider":{"description":"The entity on the client side that will handle decision tasks for this workflow","type":"string"},"mode":{"type":"string"}},"type":"object"},"type":"array"},"id":"debug.inconsistent_workflows.get_inconsistent_workflows.response"}},"kind":"discovery#restDescription","id":"backbeat api","name":"api","version":"","title":"Backbeat API","description":"Backbeat is a workflow service that allows for applications to confidently and reliably synchronize and control complicated business processes It makes it easy and quick to both implement new processes and expand existing ones.<br><br>It enables rapid and flexible scaling of any application by coordinating all the parts of your business processes regardless of where the work is performed, across threads, processes, hardware, and even applications. Distributed and asynchronous systems can be difficult to manage, but Backbeat manages concurrency, scheduling, dependencies, and even manual tasks with ease.<br><br>Backbeat also provides extensive logging, error handling, and retry logic all right out of the box. The history of everything that runs through Backbeat is maintained providing an abundance of data for business analytics and easy high level introspection into any problems that may arise.<br><br>All of this is controlled by simple rules in your application logic. Backbeat exposes a simple API that uses HTTP to communicate with its clients. This gives you the flexibility to choose the technology stack that best suits your applications needs. It also makes it convenient to build any custom tooling you need: DSLs, custom UIs, and graphical modeling tools; all in addition to being able to take advantage of the tools built by others in the open source community.","icons":{},"documentationLink":"https://github.groupondev.com/pages/finance-engineering/backbeat/","protocol":"rest","baseUrl":"http://accounting-utility2.snc1:9000","parameters":{"client_id":{"type":"string","description":"The api key that identifies the client. Email fed@groupon.com to create one for you or your team.","required":true,"location":"header"}}}
